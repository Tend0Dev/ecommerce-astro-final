import { c as createComponent, a as createAstro, r as renderTemplate, g as defineScriptVars, f as addAttribute, e as renderHead, d as renderComponent } from '../../../chunks/astro/server_G6lzf5hl.mjs';
import 'kleur/colors';
import { $ as $$Header } from '../../../chunks/Header_CmSBQoe_.mjs';
import { a as getProductById } from '../../../chunks/queries_BON_RnUO.mjs';
/* empty css                                        */
export { renderers } from '../../../renderers.mjs';

var __freeze = Object.freeze;
var __defProp = Object.defineProperty;
var __template = (cooked, raw) => __freeze(__defProp(cooked, "raw", { value: __freeze(raw || cooked.slice()) }));
var _a;
const $$Astro = createAstro();
const $$Editar = createComponent(async ($$result, $$props, $$slots) => {
  const Astro2 = $$result.createAstro($$Astro, $$props, $$slots);
  Astro2.self = $$Editar;
  const userCookie = Astro2.cookies.get("user");
  let user = null;
  if (userCookie) {
    try {
      user = JSON.parse(userCookie.value);
    } catch (e) {
      user = null;
    }
  }
  if (!user) {
    return Astro2.redirect("/login?message=" + encodeURIComponent("Por favor inicia sesi\xF3n para editar productos") + "&type=error");
  }
  const { id } = Astro2.params;
  if (!id) {
    return Astro2.redirect("/?message=" + encodeURIComponent("ID de producto no v\xE1lido") + "&type=error");
  }
  const product = await getProductById(parseInt(id));
  if (!product || product.user_id !== user.id) {
    return Astro2.redirect("/?message=" + encodeURIComponent("No tienes permiso para editar este producto") + "&type=error");
  }
  return renderTemplate(_a || (_a = __template(['<html lang="es" data-astro-cid-3bl3itba> <head><meta charset="UTF-8"><meta name="viewport" content="width=device-width, initial-scale=1.0"><title>Editar Producto | Angel Shop</title><link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.9.1/font/bootstrap-icons.css">', "", '</head> <body data-astro-cid-3bl3itba> <main data-astro-cid-3bl3itba> <h2 class="titulo-principal" data-astro-cid-3bl3itba>Editar Producto</h2> <div class="contenedor-formulario" data-astro-cid-3bl3itba> <form id="form-editar" data-astro-cid-3bl3itba> <div class="form-group" data-astro-cid-3bl3itba> <label for="title" data-astro-cid-3bl3itba>T\xEDtulo</label> <input type="text" id="title" name="title"', ' required data-astro-cid-3bl3itba> </div> <div class="form-group" data-astro-cid-3bl3itba> <label for="description" data-astro-cid-3bl3itba>Descripci\xF3n</label> <textarea id="description" name="description" required data-astro-cid-3bl3itba>', '</textarea> </div> <div class="form-group" data-astro-cid-3bl3itba> <label for="price" data-astro-cid-3bl3itba>Precio</label> <input type="number" id="price" name="price" step="0.01" min="0"', ' required data-astro-cid-3bl3itba> </div> <div class="form-group" data-astro-cid-3bl3itba> <label for="stock" data-astro-cid-3bl3itba>Stock disponible</label> <input type="number" id="stock" name="stock" min="0"', ' required data-astro-cid-3bl3itba> </div> <div class="form-group" data-astro-cid-3bl3itba> <label for="image" data-astro-cid-3bl3itba>URL de la imagen del producto</label> <input type="url" id="image" name="image"', ' placeholder="https://ejemplo.com/imagen.jpg" required data-astro-cid-3bl3itba> <small data-astro-cid-3bl3itba>Pega aqu\xED la URL de tu imagen (puede ser de cualquier sitio)</small> </div> <div class="preview-container" data-astro-cid-3bl3itba> <h3 data-astro-cid-3bl3itba>Vista previa de la imagen</h3> <img id="image-preview"', ' alt="Vista previa" data-astro-cid-3bl3itba> </div> <div class="botones" data-astro-cid-3bl3itba> <a href="/mis-productos" class="btn-cancelar" data-astro-cid-3bl3itba>Cancelar</a> <button type="submit" class="btn-guardar" data-astro-cid-3bl3itba> <i class="bi bi-check-lg" data-astro-cid-3bl3itba></i> Guardar cambios\n</button> </div> </form> </div> </main> <script>(function(){', "\n    document.addEventListener('DOMContentLoaded', () => {\n      const form = document.getElementById('form-editar');\n      const imageInput = document.getElementById('image');\n      const imagePreview = document.getElementById('image-preview');\n\n      // Actualizar vista previa de imagen\n      imageInput.addEventListener('input', () => {\n        imagePreview.src = imageInput.value;\n      });\n\n      // Manejar env\xEDo del formulario\n      form.addEventListener('submit', async (e) => {\n        e.preventDefault();\n\n        const formData = new FormData(form);\n        const data = {\n          title: formData.get('title'),\n          description: formData.get('description'),\n          price: parseFloat(formData.get('price')),\n          stock: parseInt(formData.get('stock')),\n          image: formData.get('image')\n        };\n\n        try {\n          const response = await fetch(`/api/products/update/${productId}`, {\n            method: 'PATCH',\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(data)\n          });\n\n          const result = await response.json();\n\n          if (response.ok) {\n            window.location.href = '/mis-productos?message=' + encodeURIComponent('Producto actualizado correctamente') + '&type=success';\n          } else {\n            alert(result.error || 'Error al actualizar el producto');\n          }\n        } catch (error) {\n          console.error('Error:', error);\n          alert('Error al actualizar el producto');\n        }\n      });\n    });\n  })();<\/script>  </body> </html>"], ['<html lang="es" data-astro-cid-3bl3itba> <head><meta charset="UTF-8"><meta name="viewport" content="width=device-width, initial-scale=1.0"><title>Editar Producto | Angel Shop</title><link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.9.1/font/bootstrap-icons.css">', "", '</head> <body data-astro-cid-3bl3itba> <main data-astro-cid-3bl3itba> <h2 class="titulo-principal" data-astro-cid-3bl3itba>Editar Producto</h2> <div class="contenedor-formulario" data-astro-cid-3bl3itba> <form id="form-editar" data-astro-cid-3bl3itba> <div class="form-group" data-astro-cid-3bl3itba> <label for="title" data-astro-cid-3bl3itba>T\xEDtulo</label> <input type="text" id="title" name="title"', ' required data-astro-cid-3bl3itba> </div> <div class="form-group" data-astro-cid-3bl3itba> <label for="description" data-astro-cid-3bl3itba>Descripci\xF3n</label> <textarea id="description" name="description" required data-astro-cid-3bl3itba>', '</textarea> </div> <div class="form-group" data-astro-cid-3bl3itba> <label for="price" data-astro-cid-3bl3itba>Precio</label> <input type="number" id="price" name="price" step="0.01" min="0"', ' required data-astro-cid-3bl3itba> </div> <div class="form-group" data-astro-cid-3bl3itba> <label for="stock" data-astro-cid-3bl3itba>Stock disponible</label> <input type="number" id="stock" name="stock" min="0"', ' required data-astro-cid-3bl3itba> </div> <div class="form-group" data-astro-cid-3bl3itba> <label for="image" data-astro-cid-3bl3itba>URL de la imagen del producto</label> <input type="url" id="image" name="image"', ' placeholder="https://ejemplo.com/imagen.jpg" required data-astro-cid-3bl3itba> <small data-astro-cid-3bl3itba>Pega aqu\xED la URL de tu imagen (puede ser de cualquier sitio)</small> </div> <div class="preview-container" data-astro-cid-3bl3itba> <h3 data-astro-cid-3bl3itba>Vista previa de la imagen</h3> <img id="image-preview"', ' alt="Vista previa" data-astro-cid-3bl3itba> </div> <div class="botones" data-astro-cid-3bl3itba> <a href="/mis-productos" class="btn-cancelar" data-astro-cid-3bl3itba>Cancelar</a> <button type="submit" class="btn-guardar" data-astro-cid-3bl3itba> <i class="bi bi-check-lg" data-astro-cid-3bl3itba></i> Guardar cambios\n</button> </div> </form> </div> </main> <script>(function(){', "\n    document.addEventListener('DOMContentLoaded', () => {\n      const form = document.getElementById('form-editar');\n      const imageInput = document.getElementById('image');\n      const imagePreview = document.getElementById('image-preview');\n\n      // Actualizar vista previa de imagen\n      imageInput.addEventListener('input', () => {\n        imagePreview.src = imageInput.value;\n      });\n\n      // Manejar env\xEDo del formulario\n      form.addEventListener('submit', async (e) => {\n        e.preventDefault();\n\n        const formData = new FormData(form);\n        const data = {\n          title: formData.get('title'),\n          description: formData.get('description'),\n          price: parseFloat(formData.get('price')),\n          stock: parseInt(formData.get('stock')),\n          image: formData.get('image')\n        };\n\n        try {\n          const response = await fetch(\\`/api/products/update/\\${productId}\\`, {\n            method: 'PATCH',\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(data)\n          });\n\n          const result = await response.json();\n\n          if (response.ok) {\n            window.location.href = '/mis-productos?message=' + encodeURIComponent('Producto actualizado correctamente') + '&type=success';\n          } else {\n            alert(result.error || 'Error al actualizar el producto');\n          }\n        } catch (error) {\n          console.error('Error:', error);\n          alert('Error al actualizar el producto');\n        }\n      });\n    });\n  })();<\/script>  </body> </html>"])), renderComponent($$result, "Header", $$Header, { "data-astro-cid-3bl3itba": true }), renderHead(), addAttribute(product.title, "value"), product.description, addAttribute(product.price, "value"), addAttribute(product.stock, "value"), addAttribute(product.image, "value"), addAttribute(product.image, "src"), defineScriptVars({ productId: id }));
}, "C:/Users/tendo/OneDrive/Desktop/astro-ecommerce/src/pages/producto/[id]/editar.astro", void 0);

const $$file = "C:/Users/tendo/OneDrive/Desktop/astro-ecommerce/src/pages/producto/[id]/editar.astro";
const $$url = "/producto/[id]/editar";

const _page = /*#__PURE__*/Object.freeze(/*#__PURE__*/Object.defineProperty({
  __proto__: null,
  default: $$Editar,
  file: $$file,
  url: $$url
}, Symbol.toStringTag, { value: 'Module' }));

const page = () => _page;

export { page };
