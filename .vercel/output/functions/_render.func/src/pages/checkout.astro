---
import Header from "@components/Header.astro";
import { getCartWithProducts, type CartItemWithProduct } from "../lib/queries";

const userCookie = Astro.cookies.get('user');
let user = null;
let cartItems: CartItemWithProduct[] = [];
let total = 0;

if (userCookie) {
  try {
    user = JSON.parse(userCookie.value);
    cartItems = await getCartWithProducts(user.id);
    total = cartItems.reduce((sum, item) => sum + (item.Product.price * item.CartItem.quantity), 0);
  } catch (e) {
    user = null;
  }
}

// Redirigir si no hay usuario o el carrito está vacío
if (!user) {
  return Astro.redirect('/login?message=' + encodeURIComponent('Por favor inicia sesión para realizar la compra') + '&type=error');
}

if (cartItems.length === 0) {
  return Astro.redirect('/carrito?message=' + encodeURIComponent('Tu carrito está vacío') + '&type=error');
}
---

<!DOCTYPE html>
<html lang="es">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Checkout | Angel Shop</title>
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.9.1/font/bootstrap-icons.css">
  <Header />
</head>
<body>
  <main>
    <h2 class="titulo-principal">Finalizar Compra</h2>
    
    <div class="checkout-container">
      <div class="resumen-pedido">
        <h3>Resumen del Pedido</h3>
        <div class="productos-lista">
          {cartItems.map(item => (
            <div class="producto-item">
              <img src={item.Product.image} alt={item.Product.title} />
              <div class="producto-detalles">
                <h4>{item.Product.title}</h4>
                <p>Cantidad: {item.CartItem.quantity}</p>
                <p class="precio">${(item.Product.price * item.CartItem.quantity).toFixed(2)}</p>
              </div>
            </div>
          ))}
        </div>
        <div class="total">
          <h4>Total</h4>
          <p class="precio-total">${total.toFixed(2)}</p>
        </div>
      </div>

      <div class="formulario-pago">
        <h3>Información de Pago</h3>
        <form id="checkout-form">
          <div class="form-group">
            <label for="nombre">Nombre completo</label>
            <input type="text" id="nombre" name="nombre" required />
          </div>

          <div class="form-group">
            <label for="email">Email</label>
            <input type="email" id="email" name="email" value={user.email} required />
          </div>

          <div class="form-group">
            <label for="direccion">Dirección de envío</label>
            <textarea id="direccion" name="direccion" required></textarea>
          </div>

          <div class="form-group">
            <label for="tarjeta">Número de tarjeta</label>
            <input type="text" id="tarjeta" name="tarjeta" pattern="[0-9]{16}" maxlength="16" required />
          </div>

          <div class="form-row">
            <div class="form-group">
              <label for="vencimiento">Fecha de vencimiento</label>
              <input type="text" id="vencimiento" name="vencimiento" placeholder="MM/AA" pattern="[0-9]{2}/[0-9]{2}" maxlength="5" required />
            </div>

            <div class="form-group">
              <label for="cvv">CVV</label>
              <input type="text" id="cvv" name="cvv" pattern="[0-9]{3,4}" maxlength="4" required />
            </div>
          </div>

          <button type="submit" class="btn-comprar">
            <i class="bi bi-lock-fill"></i> Pagar ${total.toFixed(2)}
          </button>
        </form>
      </div>
    </div>
  </main>

  <script>
    document.addEventListener('DOMContentLoaded', () => {
      const form = document.getElementById('checkout-form');
      
      form?.addEventListener('submit', async (e) => {
        e.preventDefault();
        
        // Aquí iría la lógica de procesamiento de pago
        // Por ahora solo redirigimos a la página de compra exitosa
        window.location.href = '/compra-exitosa';
      });

      // Formatear fecha de vencimiento
      const vencimientoInput = document.getElementById('vencimiento');
      vencimientoInput?.addEventListener('input', (e) => {
        let value = (e.target as HTMLInputElement).value.replace(/\D/g, '');
        if (value.length >= 2) {
          value = value.slice(0,2) + '/' + value.slice(2);
        }
        (e.target as HTMLInputElement).value = value;
      });
    });
  </script>

  <style>
    main {
      max-width: 1200px;
      margin: 2rem auto;
      padding: 0 1rem;
    }

    .titulo-principal {
      text-align: center;
      color: #2c3e50;
      margin-bottom: 2rem;
    }

    .checkout-container {
      display: grid;
      grid-template-columns: 1fr 1fr;
      gap: 2rem;
    }

    .resumen-pedido,
    .formulario-pago {
      background: white;
      padding: 2rem;
      border-radius: 8px;
      box-shadow: 0 2px 4px rgba(0,0,0,0.1);
    }

    .productos-lista {
      margin: 1rem 0;
    }

    .producto-item {
      display: flex;
      gap: 1rem;
      padding: 1rem 0;
      border-bottom: 1px solid #ecf0f1;
    }

    .producto-item img {
      width: 80px;
      height: 80px;
      object-fit: cover;
      border-radius: 4px;
    }

    .producto-detalles h4 {
      margin: 0 0 0.5rem 0;
      color: #2c3e50;
    }

    .producto-detalles p {
      margin: 0;
      color: #7f8c8d;
    }

    .precio {
      color: #e74c3c !important;
      font-weight: bold;
    }

    .total {
      display: flex;
      justify-content: space-between;
      align-items: center;
      margin-top: 1rem;
      padding-top: 1rem;
      border-top: 2px solid #ecf0f1;
    }

    .precio-total {
      font-size: 1.5rem;
      font-weight: bold;
      color: #e74c3c;
    }

    .form-group {
      margin-bottom: 1.5rem;
    }

    .form-group label {
      display: block;
      margin-bottom: 0.5rem;
      color: #2c3e50;
    }

    .form-group input,
    .form-group textarea {
      width: 100%;
      padding: 0.8rem;
      border: 1px solid #ddd;
      border-radius: 4px;
      font-size: 1rem;
    }

    .form-group textarea {
      min-height: 100px;
      resize: vertical;
    }

    .form-row {
      display: grid;
      grid-template-columns: 1fr 1fr;
      gap: 1rem;
    }

    .btn-comprar {
      width: 100%;
      padding: 1rem;
      background: #2ecc71;
      color: white;
      border: none;
      border-radius: 4px;
      font-size: 1.1rem;
      cursor: pointer;
      display: flex;
      align-items: center;
      justify-content: center;
      gap: 0.5rem;
    }

    .btn-comprar:hover {
      background: #27ae60;
    }

    @media (max-width: 768px) {
      .checkout-container {
        grid-template-columns: 1fr;
      }
    }
  </style>
</body>
</html> 